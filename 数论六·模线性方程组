
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;
typedef long long LL;
const int MAXN = 1e3+5;
void Ex_gcd(LL a, LL b, LL &x, LL &y)
{
    if(b == 0)
    {
        x = 1;
        y = 0;
        return ;
    }
    LL x1, y1;
    Ex_gcd(b, a%b, x1, y1);
    x = y1;
    y = x1-(a/b)*y1;
}
LL GCD(LL a, LL b)
{
    if(b == 0)
        return a;
    return GCD(b, a%b);
}
LL m[MAXN],r[MAXN], n;
LL Solve()
{
    LL M = m[1], R = r[1], d, k1, k2, c;
    for(int i=2; i<=n; i++)
    {
        d = GCD(M, m[i]);
        c = r[i] - R;
        if(c % d)
            return -1;
        Ex_gcd(M/d, m[i]/d, k1, k2);
        k1 = (c/d*k1)%(m[i]/d);
        R = R+k1*M;
        M = M/d*m[i];
        R %= M;
    }
    if(R < 0)
        R = R+M;
    return R;
}
int main()
{
    while(~scanf("%d",&n))
    {
        for(int i=1; i<=n; i++)
            scanf("%lld%lld",&m[i],&r[i]);
        LL ret = Solve();
        printf("%lld\n",ret);
    }
    return 0;
}